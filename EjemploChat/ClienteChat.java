package EjemploChat;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.net.UnknownHostException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class ClienteChat extends javax.swing.JFrame {

    static String Me;
    static String panelText = "";

    public ClienteChat() {
        initComponents();
         this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        UserName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jEditorPane1.setContentType("text/html"); // NOI18N
        jEditorPane1.setText("");
        jEditorPane1.setToolTipText("");
        jEditorPane1.setEditable(false);
        jScrollPane1.setViewportView(jEditorPane1);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Send Message");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setText("Chat con");

        UserName.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)
                                .addGap(8, 8, 8))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UserName)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(UserName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            MulticastSocket s = new MulticastSocket(4000);//El socket escuchar치 el puerto 8000
            s.setReuseAddress(true);
            s.setTimeToLive(255);//TTL=255 
            String dir = "230.1.1.1";
            int ptoD = 4000;//Se transmitir치 a este puerto
            InetAddress dst = null;
            try {//Resolver la dir IP
                dst = InetAddress.getByName(dir);
            } catch (UnknownHostException u) {
                System.err.println("La dir. no es v치lida");
                System.exit(1);
            }//catch
            s.joinGroup(dst);//Unirse a la direcci칩n de grupo
            System.out.println("Servicio de mensajeria unido al grupo:" + dir + "...enviando mensaje");
            //<--- get and send message--------->
            String msj = "<" + Me + ">" + "<msjPriv>" + "<" + UserName.getText() + ">" + jTextField1.getText();
            byte[] b = msj.getBytes();
            DatagramPacket p = new DatagramPacket(b, b.length, dst, ptoD);
            s.send(p);
            System.out.println("Mensaje enviado: " + msj);
            s.close();
            Mostrar(Me,jTextField1.getText());
            //panelText += "<tr><td>" + Me + " dice: " + jTextField1.getText() + "</td></tr>";
            //jEditorPane1.setText(panelText);
        } catch (IOException e) {
        }//catch
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteChat().setVisible(true);
            }
        });

    }

    public void Mostrar(String UserName, String Msj) {

        String msjHTML = "";
        String msjCom = "";

      if (Pattern.matches("[^:]+(:D|:v|:c|:s|:o|<3)", Msj)) {
                //System.out.println("Hay un emoji al final del mensaje");
                Pattern patron = Pattern.compile("([^:]*)(:D|:v|:c|:s|:o|<3)");
                Matcher matcher = patron.matcher(Msj);
                matcher.find();
                String texto = matcher.group(1);//Get only the text
                String emoji = matcher.group(2);//Get only the emoji
                System.out.println("Mensaje:" + texto + " Emoji:" + emoji);
                //<-----------------------Check what kind of emoji is------------------>
                if (emoji.equals(":D") || texto.equals(":D")) {
                    msjHTML = msjHTML + "<img src=https://i.pinimg.com/originals/36/df/46/36df46dc53773f15ad5935379f5bae7e.gif "
                            + "width=\"30\" height=\"30\">";
                } else if (emoji.equals(":v")) {
                    msjHTML = msjHTML + "<img src=\"file:\\\\\\D:\\DESCARGAS\\Chat\\Archivos enviables\\pacman.gif\" "
                            + "width=\"30\" height=\"30\">";
                } else if (emoji.equals(":c")) {
                    msjHTML = msjHTML + "<img src=\"file:\\\\\\D:\\DESCARGAS\\Chat\\Archivos enviables\\triste.png\" "
                            + "width=\"30\" height=\"30\">";
                } else if (emoji.equals(":s")) {
                    msjHTML = msjHTML + "<img src=\"file:\\\\\\D:\\DESCARGAS\\Chat\\Archivos enviables\\borracho.png\" "
                            + "width=\"30\" height=\"30\">";
                } else if (emoji.equals(":o")) {
                    msjHTML = msjHTML + "<img src=\"file:\\\\\\D:\\DESCARGAS\\Chat\\Archivos enviables\\feo.gif\" "
                            + "width=\"30\" height=\"30\">";
                } else if (emoji.equals("<3")) {
                    msjHTML = msjHTML + "<img src=\"file:\\\\\\D:\\DESCARGAS\\Chat\\Archivos enviables\\love.gif\" "
                            + "width=\"30\" height=\"30\">";
                }
            msjCom = "<tr><td>" + UserName + " dice: " + texto + msjHTML + "</td></tr>";
        }//if
        else //If the message doesn't have emoji
        {
            //System.out.println("Mensaje sin emoji");
            msjCom = "<tr><td>" + UserName + " dice: " + Msj + "</td></tr>";
        }
        panelText = panelText + msjCom;
        //System.out.println("Sali칩 del if, linea HTML: "+panel);
        jEditorPane1.setText(panelText);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel UserName;
    private javax.swing.JButton jButton1;
    public static javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
